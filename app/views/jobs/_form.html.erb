<%= form_for(@job) do |f| %>
  <% if @job.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@job.errors.count, "error") %> prohibited this job from being saved:</h2>

      <ul>
      <% @job.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title">What?</h3>
  </div>
  <div class="panel-body row">
    <div class="form-group col-md-5">
      <label for="inputFile">Upload file</label>
      <input class="file_input" id="inputFile" name="attachment[file]" type="file">
      <p class="help-block">Upload a file from your computer</p>
    </div>
    
    <div class="col-md-2"> or </div>

    <div id="upload_file" class="col-md-5"></div>
  </div>
  <div>
    <div class="field">
      <%= f.label :copies %><br>
      <%= f.number_field :copies %>
    </div>
  </div>
</div>

<div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title">Where?</h3>
  </div>
  <div class="panel-body" id="map-canvas" style="height:400px">
  </div>
</div>

<div class="panel panel-default">
  <div class="panel-heading">
    <h3 class="panel-title">When?</h3>
  </div>
  <div class="panel-body">
      <div class="form-group">
    <input class="date_input" id="inputDate" name="inputDate" type="date">
    <p class="help-block">When do you need your document?</p>
  </div>
  </div>
</div>

<%= f.hidden_field :printer, :value => "[]" %>

  <div class="actions">
    <%= f.submit %>
  </div>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry&sensor=false"></script>
<script>
var mapOptions, map, GeoMarker, printers, circle;

function createPrinter(id, p){
    var image = 'http://maps.google.com/mapfiles/ms/icons/red-dot.png';
    return {marker: new google.maps.Marker({
                        position: p,
                        map: map,
                        icon: image}),
        id:id,
        selected:false};
}

function setPrinterSelected(p, b){
    p.selected = b;
    if(p.selected){
        p.marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png');
    } else {
        p.marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');
    }
    updateSelectionInForm();
}

function updateSelectionInForm(){
    var values = [];
    printers.forEach(function(printer){
        if(printer.selected){
            values.push(printer.id);
        }
    });
    $('#job_printer').val(JSON.stringify(values));
}

function initialize() {
  mapOptions = {
    zoom: 14,
    center: new google.maps.LatLng(57.70567520430679, 11.963586330413818)
  }
  map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
  printers = [];
  $.getJSON('/printers.json', function(data){
    data.forEach(function(printer){
        var latLng = $.parseJSON(printer.location);
        printers.push(createPrinter(printer.id, new google.maps.LatLng(latLng.lat, latLng.lng)));
    });
      printers.forEach(function(printer){
        google.maps.event.addListener(printer.marker, 'click', function() {
           setPrinterSelected(printer, !printer.selected);
        });
      });
  });
var circleOptions = {
      strokeColor: '#FF0000',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#FF0000',
      fillOpacity: 0.35,
      map: map,
      center: mapOptions.center,
      radius: 500,
      editable:true
    };
circle = new google.maps.Circle(circleOptions);

//on circle change mark printers in range.
var circleChanged = function() {
  printers.forEach(function(printer){
     //if (google.maps.geometry.poly.containsLocation(printer.marker.getPosition(), circle)) {
     if (circle.getBounds().contains(printer.marker.getPosition())) {
           setPrinterSelected(printer, true);
        } else {
           setPrinterSelected(printer, false);
        }
  });
};
google.maps.event.addListener(circle, 'radius_changed', circleChanged);
google.maps.event.addListener(circle, 'center_changed', circleChanged);

}

google.maps.event.addDomListener(window, 'load', initialize);

</script>
<% end %>
